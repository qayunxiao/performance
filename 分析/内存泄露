内存泄露：当以前分配的一片内存不再需要使用或无法访问时，但是却并没有释放它。
指一块被分配的内存既不能使用，又不能回收，直到浏览器进程结束。
根据经验，当使用大量的函数对相同的内存块进行处理时，很可能会出现内存泄漏。尤其是在碰到错误路径的情况下更是如此。
内存泄漏可以分为4类：
　　1. 常发性内存泄漏。发生内存泄漏的代码会被多次执行到，每次被执行的时候都会导致一块内存泄漏。
　　2. 偶发性内存泄漏。发生内存泄漏的代码只有在某些特定环境或操作过程下才会发生。常发性和偶发性是相对的。对于特定的环境，偶发性的也许就变成了常发性的。所以测试环境和测试方法对检测内存泄漏至关重要。
　　3. 一次性内存泄漏。发生内存泄漏的代码只会被执行一次，或者由于算法上的缺陷，导致总会有一块仅且一块内存发生泄漏。比如，在一个 Singleton类的构造函数中分配内存，在析构函数中却没有释放该内存。而Singleton类只存在一个实例，所以内存泄漏只会发生一次。
　　4. 隐式内存泄漏。程序在运行过程中不停的分配内存，但是直到结束的时候才释放内存。严格的说这里并没有发生内存泄漏，因为最终程序释放了所有申请 的内存。但是对于一个服务器程序，需要运行几天，几周甚至几个月，不及时释放内存也可能导致最终耗尽系统的所有内存。所以，我们称这类内存泄漏为隐式内存泄漏。
实例：
1.比如当显示电脑游戏或动画视频画面时。（浏览器FIREFOX比IE和360更易发生内存泄露。因为FIREFOX上有扩展和主题，占用内存较大）
2.主对话框为dialogchange,两个子对话框picture2,picture3.
主对话框中只设置了一个按钮，可以进入picture2页面，picture2中只设置了一个按钮“next”，可以进入picture3页面，picture3中只设置了一个按钮“back”，可以返回picture2页面。想实现两个子对话框页面的切换。一般情况下运行时，做picture2喝picture3之间的切换时没有问题的，但是切换的次数多了，可能二十次，程序就会死掉。
