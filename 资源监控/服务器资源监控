磁盘：iostat -x 1 1
 磁盘input和output 和 %util值高说明磁盘长时间占有CPU在发送数据，磁盘传输速度不足 存在瓶颈

网络瓶颈：sar -n DEV 1 2
rxkB/s 每秒接受的数据量（千字节数），txkB/s 每秒发送的数据量（千字节数）
  传输速度，与网络的总带宽进行对比，接近总带宽，说明网络存在瓶颈

中间件：
    mysql：
      慢查询日志：压测过程查看慢查询日志内容结合后端程序log
          show  variables like "slow_query%" ;
          #设置开启
          SET GLOBAL slow_query_log=ON;
          #默认是10
          set global long_query_time = 1
          
      数据库连接池：
          查看方法：
                show variables like "max_connections"; #连接池配置
                show STATUS like "threads_connected" #当前链接数
          允许应用程序重复使用现有的数据库连接，而不是重新建立。 2.当连接完毕后，连接池会将该连接回收，并交付其他的线程使用。 3.减少创建和断开数据库连接的次数，提高数据库的访问效率。
          Python数据库连接池DBUtils（基于pymysql模块连接数据库）
          关注，利用率=当前使用的连接数/最大连接数的比例，建议85%左右
          超过85%，连接池可能被占满，如果利用率过底，说明资源存在浪费，可能会存在其它性能问题

       锁：80%是行锁
          查看方法：
              show open tables WHERE in_use >= 1; #查询当前正在使用的标，可能存在锁表
              show processlist ;
              kill process_id 62;
          一个用户修改数据时，对该数据进行加锁操作，其它用户不能进行修改
          只有当第一个用户修改完之后，其它用户才能进行修改

          种类：
            表锁：开销小，加锁快，不会出现死锁，锁定粒度最大，并发度最低
            行锁：开销打，加锁慢，会出现死锁，锁定粒度最小，并发度最高，可能会产生死锁




